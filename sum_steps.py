import steering
import os
import torch
import matplotlib.pyplot as plt

passed_w_steering = set(
    [
        289,
        262,
        276,
        15,
        100,
        128,
        302,
        303,
        129,
        115,
        28,
        263,
        288,
        275,
        261,
        249,
        117,
        301,
        328,
        314,
        300,
        102,
        17,
        248,
        270,
        264,
        106,
        112,
        310,
        305,
        339,
        107,
        12,
        265,
        259,
        298,
        273,
        10,
        38,
        139,
        313,
        312,
        104,
        110,
        138,
        272,
        299,
        215,
        188,
        177,
        163,
        361,
        349,
        348,
        360,
        63,
        77,
        189,
        228,
        214,
        216,
        202,
        61,
        75,
        174,
        148,
        363,
        149,
        74,
        48,
        203,
        217,
        207,
        64,
        159,
        165,
        171,
        373,
        372,
        170,
        59,
        71,
        65,
        206,
        212,
        238,
        204,
        210,
        73,
        199,
        9,
        172,
        358,
        364,
        365,
        371,
        99,
        167,
        173,
        66,
        198,
        72,
        205,
        220,
        234,
        208,
        195,
        57,
        5,
        43,
        94,
        80,
        340,
        369,
        341,
        81,
        95,
        143,
        56,
        4,
        180,
        194,
        223,
        182,
        196,
        68,
        6,
        54,
        169,
        97,
        357,
        342,
        96,
        82,
        154,
        140,
        7,
        55,
        41,
        197,
        69,
        183,
        222,
        236,
        232,
        226,
        3,
        187,
        79,
        86,
        92,
        346,
        353,
        347,
        179,
        87,
        78,
        227,
        219,
        231,
        0,
        52,
        46,
        184,
        91,
        85,
        345,
        344,
        152,
        84,
        90,
        185,
        191,
        53,
        230,
        224,
        294,
        257,
        34,
        20,
        135,
        109,
        323,
        322,
        336,
        108,
        256,
        242,
        295,
        297,
        254,
        240,
        268,
        23,
        136,
        320,
        334,
        308,
        22,
        269,
        241,
        282,
        296,
        292,
        286,
        251,
        26,
        32,
        127,
        319,
        331,
        330,
        318,
        132,
        126,
        27,
        244,
        287,
        285,
        291,
        246,
        252,
        31,
        25,
        124,
        327,
        125,
        131,
        119,
        24,
        247,
        290,
        284,
    ]
)


def main():
    folder_path = "/Users/nathanvogt/Downloads/vecs_k_4"
    destination_path = "/Users/nathanvogt/Downloads/vecs_k_4_summed_passed"
    if not os.path.exists(destination_path):
        os.makedirs(destination_path)
    for task_folder in os.listdir(folder_path):
        try:
            task_id = int(task_folder.split(".")[0])
        except:
            continue
        if task_id not in passed_w_steering:
            continue
        vecs = []
        for step_folder in os.listdir(os.path.join(folder_path, task_folder)):
            try:
                int(step_folder[0])
            except:
                continue
            vecs.append(
                steering.load_steering_vecs(
                    os.path.join(folder_path, task_folder, step_folder), device="cpu"
                )
            )
        summed_vecs = steering.normalize_steering_vectors(vecs[0])
        for vec in vecs[1:]:
            vec = steering.normalize_steering_vectors(vec)
            summed_vecs = steering.add_steering_vectors(summed_vecs, vec)
        steering.save_steering_vecs(
            os.path.join(destination_path, f"{task_id}"), summed_vecs
        )


main()
